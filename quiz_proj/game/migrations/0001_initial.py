# -*- coding: utf-8 -*-
# Generated by Django 1.11.23 on 2019-08-03 11:46
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('question', '0001_initial'),
        ('player', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('completed', models.BooleanField(default=False)),
                ('asked_questions', models.ManyToManyField(to='question.Question')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='question.Category')),
            ],
        ),
        migrations.CreateModel(
            name='GameAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField()),
                ('time', models.DurationField()),
                ('answer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='question.QuestionChoice')),
                ('question', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='question.Question')),
            ],
        ),
        migrations.CreateModel(
            name='GameParticipant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('winner', models.BooleanField(default=False)),
                ('answers', models.ManyToManyField(to='game.GameAnswer')),
                ('player', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='player.Player')),
            ],
        ),
        migrations.AddField(
            model_name='game',
            name='participants',
            field=models.ManyToManyField(to='game.GameParticipant'),
        ),
    ]
